//apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'

jar {
	version = '1.0.0'
	baseName = 'api'
}

sourceCompatibility = 1.7
compileTestJava.sourceCompatibility = 1.7
compileTestJava.targetCompatibility = 1.7

def defaultEncoding = 'UTF-8'
tasks.withType(AbstractCompile) each { it.options.encoding = defaultEncoding }

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/libs-release" }
}

configurations {
	app_config
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")

	testCompile "junit:junit:4.11"
	testCompile "org.jmockit:jmockit:1.8"
	testCompile "org.easytesting:fest-assert-core:2.0M10"

	app_config files("$buildDir/app_config")
}

buildscript {
	repositories {
		maven { url "https://repo.spring.io/libs-release" }
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath "jp.mts:gradle-api:0.0.1"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE")
	}

}

task wrapper(type: Wrapper) {
	gradleVersion = '1.12'
}


task appconfig(type: jp.mts.appconfig.tasks.YamlFileAppConfigInjectTask) {
	srcYaml = file("$appConfigRoot/simple-taskboard/$appConfigVersion/$env/app_config.yml")
	injectTargetFiles = files('src/main/resources/acceptance-test.properties')
	distPath = "$buildDir/app_config"
}

//eclipse.wtp.component.contextPath = 'api'
//eclipse.wtp.facet.file.whenMerged { wtpFacet ->
//	wtpFacet.facets.clear()
//	wtpFacet.configure([
//		new org.gradle.plugins.ide.eclipse.model.Facet('jst.java', '1.7'),
//		new org.gradle.plugins.ide.eclipse.model.Facet('jst.web', '3.0')
//	])
//}


